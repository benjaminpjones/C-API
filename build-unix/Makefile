OS = unix

API_SOURCE_DIR = ../api/src
API_BUILD_DIR = api
API_SOURCE_FILES = $(wildcard $(API_SOURCE_DIR)/*.c $(API_SOURCE_DIR)/src-$(OS)/*.c)
API_OBJECT_FILES = $(API_SOURCE_FILES:$(API_SOURCE_DIR)/%.c=$(API_BUILD_DIR)/%.o)
API_INCLUDE_FLAGS = -I../api/include -I../api/include/include-$(OS)
BUILD_LIBRARY_DIRECTORY = lib
API_TARGET = $(BUILD_LIBRARY_DIRECTORY)/libwsa.a

CLI_SOURCE_DIR = ../cli/src
CLI_BUILD_DIR = cli
CLI_SOURCE_FILES = $(wildcard $(CLI_SOURCE_DIR)/*.c $(CLI_SOURCE_DIR)/src-$(OS)/*.c)
CLI_OBJECT_FILES = $(CLI_SOURCE_FILES:$(CLI_SOURCE_DIR)/%.c=$(CLI_BUILD_DIR)/%.o)
CLI_INCLUDE_FLAGS = $(API_INCLUDE_FLAGS) -I../cli/include -I../cli/include-$(OS)
BUILD_BINARY_DIRECTORY = bin
CLI_TARGET = $(BUILD_BINARY_DIRECTORY)/wsa.exe

BUILD_DIRECTORIES = $(API_BUILD_DIR) $(CLI_BUILD_DIR) $(BUILD_LIBRARY_DIRECTORY) $(BUILD_BINARY_DIRECTORY)

CC = gcc
AR = ar
LIBS = -lm

CFLAGS = -std=gnu89 -Wall -Wextra -Werror

all : init $(API_TARGET) $(CLI_TARGET)

.PHONY: init
init : 
	mkdir -p $(BUILD_DIRECTORIES)

$(API_OBJECT_FILES):$(API_BUILD_DIR)/%.o:$(API_SOURCE_DIR)/%.c
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(API_INCLUDE_FLAGS) -c -o $@ $<

$(CLI_OBJECT_FILES):$(CLI_BUILD_DIR)/%.o:$(CLI_SOURCE_DIR)/%.c
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(CLI_INCLUDE_FLAGS) -c -o $@ $<

$(API_TARGET) : $(API_OBJECT_FILES)
	$(AR) -cvq $(API_TARGET) $(API_OBJECT_FILES)

$(CLI_TARGET) : $(API_TARGET) $(CLI_OBJECT_FILES)
	$(CC) $(CFLAGS) -o $(CLI_TARGET) $(CLI_OBJECT_FILES) $(API_TARGET) $(LIBS)

.PHONY: clean
clean : 
	-rm -fR $(BUILD_DIRECTORIES)
